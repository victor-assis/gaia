/*
** Odyspace styles - Media Query Mixins
*/
@use 'tokens' as *;
@use '../functions/unit-transform' as *;
@use 'sass:string';
@use 'sass:meta';
@use 'sass:map';

/// Lista de breakpoints simplificados
/// @type Map
/// @group module-mixins
/// @example scss
///   xs: $ody_layout_breakpoint_xs,
///   sm: $ody_layout_breakpoint_sm,
///   md: $ody_layout_breakpoint_md,
///   lg: $ody_layout_breakpoint_lg,
///   xl: $ody_layout_breakpoint_xl
$breakpoints: (
  xs: $ody_layout_breakpoint_xs,
  sm: $ody_layout_breakpoint_sm,
  md: $ody_layout_breakpoint_md,
  lg: $ody_layout_breakpoint_lg,
  xl: $ody_layout_breakpoint_xl
) !default;

/// Gera @media com padr√µes dos tokens
/// @todo implementar forma de troca de @media em diferentes temas
/// @todo *implement a way to exchange @media on different topics*
/// @param {token} $from [false] - min-width
/// @param {token} $until [false] - max-width
/// @param {all | print | screen | speech} $media-type [all] - Media Types
/// @group module-mixins
/// @example scss
///   @include media-q(sm) {
///     width: rem(10);
///   }
///   /* output: @media screen and (min-width: 48rem) {
///     width: rem(10);
///   }*/
@mixin media-q (
  $from: false,
  $until: false,
  $pointer: false,
  $media-type: all,
  $features: false
) {
  $min-width: 0;
  $max-width: 0;
  $media-pointer: '';
  $media-query: '';
  $media-features: '';

  @if $from {
    @if meta.type-of($from) == number {
      $min-width: rem($from);
    }

    @else {
      $min-width: map.get($breakpoints, $from);
    }
  }

  @if $until {
    @if meta.type-of($until) == number {
      $max-width: rem($until);
    }

    @else {
      $max-width:  map.get($breakpoints, $until) - 0.01rem;
    }
  }

  @if $min-width != 0 {
    $media-query: '#{$media-query} and (min-width: #{$min-width})';
  }

  @if $max-width != 0 {
    $media-query: '#{$media-query} and (max-width: #{$max-width})';
  }

  @if ($pointer and $media-query != '') {
    $media-pointer: ', (pointer: #{$pointer})';
  }

  @if ($media-type == 'all' and $media-query != '') {
    $media-type: '';
    $media-query: string.slice(string.unquote($media-query), 6);
  }

  @if ($features and $media-query != '') {
    $media-features: ', (#{$features})';
  }

  @media #{$media-type + $media-query + $media-pointer + $media-features} {
    @content;
  }
}
